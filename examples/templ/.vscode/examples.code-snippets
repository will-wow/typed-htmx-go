{
  // Place your templ workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  "handler": {
    "scope": "go",
    "prefix": "handler",
    "body": [
      "package ${TM_DIRECTORY/.*\\/(.*)$/$1/}",
      "",
      "import \"net/http\"",
      "",
      "func Handler() http.Handler {",
      "	mux := http.NewServeMux()",
      "",
      "	mux.HandleFunc(\"GET /\", demo)",
      "",
      "	return mux",
      "}",
      "",
      "func demo(w http.ResponseWriter, r *http.Request) {",
      "	component := page()",
      "	w.WriteHeader(http.StatusOK)",
      "	_ = component.Render(r.Context(), w)",
      "}",
      "",
    ],
    "description": "example handler file",
  },
  "page": {
    "scope": "templ",
    "prefix": "page",
    "body": [
      "package bulkupdate",
      "",
      "import (",
      "	\"github.com/lithammer/dedent\"",
      "",
      "	\"github.com/will-wow/typed-htmx-go/examples/templ/web/layout\"",
      "	\"github.com/will-wow/typed-htmx-go/hx\"",
      "	\"github.com/will-wow/typed-htmx-go/hx/swap\"",
      ")",
      "",
      "templ page() {",
      "	@layout.Base(\"$1\") {",
      "		<h1>$1</h1>",
      "		<p>",
      "			Desc",
      "		</p>",
      "		<pre>",
      "			{ dedent.Dedent(`",
      "			`) }",
      "		</pre>",
      "	}",
      "}",
    ],
  },
}
