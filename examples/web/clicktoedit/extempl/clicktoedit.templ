package extempl

import (
	"embed"

	"github.com/will-wow/typed-htmx-go/examples/web/layout/templ/layout"
	"github.com/will-wow/typed-htmx-go/htmx"
	"github.com/will-wow/typed-htmx-go/htmx/swap"
	"github.com/will-wow/typed-htmx-go/examples/web/clicktoedit/form"
	"github.com/will-wow/typed-htmx-go/examples/web/exprint"
)

var hx = htmx.NewTempl()

//go:embed clicktoedit.templ
var fs embed.FS
var ex = exprint.New(fs, "//", "")

templ Page(form *form.Form) {
	@layout.Wrapper("Click to edit") {
		<h1>Click To Edit</h1>
		<p>
			The click to edit pattern provides a way to offer inline editing of all or part of a record without a page refresh.
		</p>
		<ul>
			<li>
				This pattern starts with a UI that shows the details of a contact. The div has a button that will get the editing UI for the contact from /contact/1/edit
			</li>
		</ul>
		<pre>
			<code class="language-go">
				{ ex.PrintOrErr("clicktoedit.templ", "ViewForm") }
			</code>
		</pre>
		<ul>
			<li>
				This returns a form that can be used to edit the contact
			</li>
		</ul>
		<pre>
			<code class="language-go">
				{ ex.PrintOrErr("clicktoedit.templ", "EditForm") }
			</code>
		</pre>
		<ul>
			<li>
				The form issues a POST back to /edit, following the usual REST-ful pattern.
			</li>
			<li>
				If there is an error, the form swaps the form with error messages in place of the edit form.
			</li>
		</ul>
		<p>
			<a
				href="https://github.com/will-wow/typed-htmx-go/tree/main/examples/templ/web/clicktoedit"
				target="_blank"
				rel="noopener"
			>
				Source
			</a>
		</p>
		<h2>Demo</h2>
		@ViewForm(form)
	}
}

templ ViewForm(form *form.Form) {
	//ex:start:ViewForm
	<div
		{ hx.Target(htmx.TargetThis)... }
		{ hx.Swap(swap.OuterHTML)... }
	>
		<dl>
			<dt>First Name</dt>
			<dd>{ form.FirstName }</dd>
			<dt>Last Name</dt>
			<dd>{ form.LastName }</dd>
			<dt>Email</dt>
			<dd>{ form.Email }</dd>
			<div role="group">
				<button { hx.Get("/examples/templ/click-to-edit/edit/")... }>
					Click To Edit
				</button>
			</div>
		</dl>
	</div>
	//ex:end:ViewForm
}

templ EditForm(form *form.Form) {
	//ex:start:EditForm
	<form
		method="POST"
		action="/examples/templ/click-to-edit/edit/"
		{ hx.Post("/examples/templ/click-to-edit/edit/")... }
		{ hx.Target(htmx.TargetThis)... }
		{ hx.Swap(swap.OuterHTML)... }
	>
		<label>
			First Name
			<input
				type="text"
				name="firstName"
				value={ form.FirstName }
				if form.HasError("FirstName") {
					aria-invalid="true"
				}
			/>
			if form.HasError("FirstName") {
				<small>
					{ form.GetError("FirstName") }
				</small>
			}
		</label>
		<label>
			Last Name
			<input
				type="text"
				name="lastName"
				value={ form.LastName }
				if form.HasError("LastName") {
					aria-invalid="true"
				}
			/>
			if form.HasError("LastName") {
				<small>
					{ form.GetError("LastName") }
				</small>
			}
		</label>
		<label>
			Email Address
			<input
				type="text"
				name="email"
				value={ form.Email }
				if form.HasError("Email") {
					aria-invalid="true"
				}
			/>
			if form.HasError("Email") {
				<small>
					{ form.GetError("Email") }
				</small>
			}
		</label>
		<div role="group">
			<button type="submit">Submit</button>
			<a
				href="/examples/templ/click-to-edit/"
				role="button"
				{ hx.Get("/examples/templ/click-to-edit/view/")... }
			>
				Cancel
			</a>
		</div>
	</form>
	//ex:end:EditForm
}
