package examples

import (
	"github.com/will-wow/typed-htmx-go/examples/web/layout"
)

type templExample struct {
	layout layout.Templ
}

func newTemplExample() templExample {
	return templExample{
		layout: layout.Templ{},
	}
}

templ (e templExample) page() {
	@e.layout.Base("") {
		<h1>UI Templ Examples</h1>
		<p>
			Below are a set of UX patterns implemented in htmx with minimal HTML and styling.
		</p>
		<p>
			These are ported from the 
			<a
				href="https://htmx.org/examples/"
				target="_blank"
				rel="noopener"
			>
				htmx examples
			</a>
			and are intended showcase the use of <code>hx</code> when building HTMX applications.
		</p>
		<p>
			You can copy and paste them and then adjust them for your needs.
		</p>
		<table>
			<thead>
				<tr>
					<th>Pattern</th>
					<th>Description</th>
				</tr>
			</thead>
			<tbody>
				@e.exampleRow(
					"/examples/templ/click-to-edit",
					"Click To Edit",
					"Demonstrates inline editing of a data object",
				)
				@e.exampleRow(
					"/examples/templ/bulk-update",
					"Bulk Update",
					"Demonstrates bulk updating of multiple rows of data",
				)
			</tbody>
		</table>
	}
}

templ (e templExample) exampleRow(link, name, description string) {
	<tr>
		<td>
			<a href={ templ.SafeURL(link) }>{ name }</a>
		</td>
		<td>
			{ description }
		</td>
	</tr>
}

templ (e templExample) notFoundPage() {
	@e.layout.Base("Not Found") {
		<h1>Not Found</h1>
		<p>The page you are looking for does not exist.</p>
	}
}

templ (e templExample) serverErrorPage(err string) {
	@e.layout.Base("Server Error") {
		<h1>Something went wrong</h1>
		<p>{ err }</p>
	}
}
